#!/usr/bin/env bash
#
# Power menu script for BSPWM using Rofi
#

#######################################################################
#                            BEGIN CONFIG                             #
#######################################################################

# Colors: FG (foreground), BG (background), HL (highlighted)
FG_COLOR="#bbbbbb"
BG_COLOR="#111111"
HLFG_COLOR="#111111"
HLBG_COLOR="#bbbbbb"
BORDER_COLOR="#222222"

# Options for Rofi
ROFI_OPTIONS=(-theme ~/.config/rofi/powermenu.rasi)

# Prompt for confirmation by default
enable_confirmation=false

# Usage help text
usage="$(basename "$0") [-h] [-c] -- display a menu for shutdown, reboot, lock etc.

Options:
    -h  Show this help text
    -c  Enable user confirmation for actions

Dependencies:
  - systemd
  - bspwm
  - rofi
"

#######################################################################
#                             END CONFIG                              #
#######################################################################

# Check if a command exists
command_exists() {
    command -v "$1" &>/dev/null
}

# Verify that systemctl is available
command_exists systemctl || exit 1

# Associative array of actions
declare -A menu=(
    [" Shutdown"]="systemctl poweroff -i"
    [" Reboot"]="systemctl reboot"
    [" Suspend"]="systemctl suspend"
    [" Hibernate"]="systemctl hibernate"
    [" Lock"]="~/.config/bspwm/scripts/lockscreen"
    [" Logout"]="bspc quit"
    [" Cancel"]=""
)

menu_nrows=${#menu[@]}
menu_confirm="Shutdown Reboot Hibernate Suspend Logout"

# Parse CLI arguments
while getopts "hc" option; do
    case "${option}" in
    h)
        echo "$usage"
        exit 0
        ;;
    c) enable_confirmation=true ;;
    *) exit 1 ;;
    esac
done

# Prepare Rofi launcher configuration
rofi_colors=(-bc "${BORDER_COLOR}" -bg "${BG_COLOR}" -fg "${FG_COLOR}" -hlfg "${HLFG_COLOR}" -hlbg "${HLBG_COLOR}")
launcher_exe="rofi"
launcher_options=(-dmenu -i -lines "${menu_nrows}" "${rofi_colors[@]}" "${ROFI_OPTIONS[@]}")

# Prompt for user selection
selection=$(printf '%s\n' "${!menu[@]}" | sort | "${launcher_exe}" "${launcher_options[@]}")

# Confirm action if needed
confirm_action() {
    confirmed=$(echo -e "Yes\nNo" | rofi -dmenu -i -lines 2 -p "${selection}?" "${rofi_colors[@]}" "${ROFI_OPTIONS[@]}")
    [[ "$confirmed" == "Yes" ]] && confirmed=0
    [[ "$confirmed" -eq 0 ]] && eval "${menu[${selection}]}"
}

# Execute or confirm the selected action
if [[ -n "$selection" ]]; then
    if $enable_confirmation && [[ " ${menu_confirm[*]} " =~ " $selection " ]]; then
        confirm_action
    else
        eval "${menu[${selection}]}"
    fi
fi

