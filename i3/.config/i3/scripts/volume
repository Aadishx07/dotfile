#!/usr/bin/env bash
# Copyright (C) 2014 Julien Bonjean <julien@bonjean.info>
# Copyright (C) 2014 Alexander Keller <github@nycroth.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# original source: https://github.com/vivien/i3blocks-contrib/tree/master/volume
# check the readme: https://github.com/vivien/i3blocks-contrib/blob/master/volume/README.md
#------------------------------------------------------------------------

# The second parameter overrides the mixer selection
# For PulseAudio users, eventually use "pulse"
# For Jack/Jack2 users, use "jackplug"
# For ALSA users, you may use "default" for your primary card
# or you may use hw:# where # is the number of the card desired

# Predefine necessary variables
MIXER="${MIXER:-default}"
STEP="${STEP:-5%}"
NATURAL_MAPPING="${NATURAL_MAPPING:-0}"
AMIXER_PARAMS=()

[[ "$NATURAL_MAPPING" -eq 1 ]] && AMIXER_PARAMS+=("-M")

# Determine the mixer automatically if not set explicitly
if [[ "$MIXER" == "default" ]]; then
	if command -v pulseaudio >/dev/null && pulseaudio --check; then
		if amixer -D pulse info >/dev/null 2>&1; then
			MIXER="pulse"
		fi
	elif lsmod | grep -q jack; then
		MIXER="jackplug"
	fi
fi

# Override mixer if passed as an argument
MIXER="${2:-$MIXER}"

# Determine the scontrol (audio control name)
if [[ -z "$SCONTROL" ]]; then
	SCONTROL=$(amixer -D "$MIXER" scontrols | grep -oP "Simple mixer control '\K[^']+" | head -n 1)
fi

# Function to get volume and mute state
function get_volume_info() {
	amixer "${AMIXER_PARAMS[@]}" -D "$MIXER" get "$SCONTROL" | grep -oP "\[(\d+%)\].*\[(on|off)\]"
}

# Format output
function format_output() {
	local volume mute
	volume=$(get_volume_info | grep -oP "\d+%" -m 1)
	mute=$(get_volume_info | grep -oP "(on|off)" -m 1)

	if [[ "$mute" == "off" ]]; then
		echo "$LABEL MUTE"
	else
		echo "$LABEL $volume"
	fi
}

# Handle button events for volume control
case $BLOCK_BUTTON in
3) amixer "${AMIXER_PARAMS[@]}" -q -D "$MIXER" sset "$SCONTROL" toggle ;;            # right click, mute/unmute
4) amixer "${AMIXER_PARAMS[@]}" -q -D "$MIXER" sset "$SCONTROL" "${STEP}+" unmute ;; # scroll up, increase
5) amixer "${AMIXER_PARAMS[@]}" -q -D "$MIXER" sset "$SCONTROL" "${STEP}-" unmute ;; # scroll down, decrease
esac

# Output the formatted volume or mute state
volume | format
